

CREATE COMPUTE MODULE postUpdatePassword_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		DECLARE customerID,newPwd,acc_tab,pwd_upd,DB_PWD CHARACTER;
		
		SET customerID=FIELDVALUE(InputRoot.JSON.Data.CustomerID);
		SET newPwd=FIELDVALUE(InputRoot.JSON.Data.NewPassword);
		
		SET customerID=CAST(customerID AS INTEGER);
		SET newPwd=CAST(newPwd AS CHARACTER);
		
		IF customerID = '' AND newPwd = '' THEN
			
			SET OutputRoot.JSON.Data.StatusCode='400';
			SET OutputRoot.JSON.Data.Message='CustomerID and Password are mandotory';
			
		ELSEIF customerID = '' THEN
			
			SET OutputRoot.JSON.Data.StatusCode='400';
			SET OutputRoot.JSON.Data.Message='CustomerID is mandotory';
			
		ELSEIF newPwd = '' THEN	
			SET OutputRoot.JSON.Data.StatusCode='400';
			SET OutputRoot.JSON.Data.Message='Password is mandotory';
			
		ELSE
			
			SET acc_tab='UPDATE EIDIKO_ACCOUNT SET PASSWORD=? WHERE CUSTOMER_ID=?';
			
			SET Environment.Result=PASSTHRU(acc_tab VALUES(newPwd,customerID));
			
			SET DB_PWD='SELECT PASSWORD FROM EIDIKO_ACCOUNT WHERE CUSTOMER_ID=?';
			
			SET Environment.NewPwd=PASSTHRU(DB_PWD VALUES(customerID));
			
			IF Environment.NewPwd.PASSWORD IS NULL THEN
				
				SET OutputRoot.JSON.Data.StatusCode='400';
			    SET OutputRoot.JSON.Data.Message='Failure';
			    
			ELSEIF newPwd <> Environment.NewPwd.PASSWORD THEN
				SET OutputRoot.JSON.Data.StatusCode='400';
			    SET OutputRoot.JSON.Data.Message='Password Not Updated';
				
			ELSE
				SET OutputRoot.JSON.Data.StatusCode='200';
			    SET OutputRoot.JSON.Data.Message='Password Updated Successfull';
			END IF;
			
			
			END IF;
	END;
END MODULE;
