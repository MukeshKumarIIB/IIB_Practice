



CREATE COMPUTE MODULE postValidateOtp_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		DECLARE Customer_ID,OTP_No,DB_OTP CHARACTER;

		SET Customer_ID=FIELDVALUE(InputRoot.JSON.Data.CustomerID);
		SET OTP_No=FIELDVALUE(InputRoot.JSON.Data.OTP);

		IF Customer_ID='' AND OTP_No='' THEN
			SET OutputRoot.JSON.Data.StatusCode='400';
			SET OutputRoot.JSON.Data.Message='CustomerID and OTP are mandotory';

		ELSEIF Customer_ID='' THEN

			SET OutputRoot.JSON.Data.StatusCode='400';
			SET OutputRoot.JSON.Data.Message='CustomerID is mandotory';

		ELSEIF OTP_No='' THEN
			SET OutputRoot.JSON.Data.StatusCode='400';
			SET OutputRoot.JSON.Data.Message='OTP is mandotory';

		ELSE

			DECLARE tab1 CHARACTER;

			SET tab1='SELECT OTP,OTP_TIME FROM EIDIKO_ACCOUNT WHERE CUSTOMER_ID=?';
			SET Environment.ACCOUNT_TAB=PASSTHRU(tab1 VALUES(Customer_ID));		  	 


			SET DB_OTP=Environment.ACCOUNT_TAB.OTP;		  	 
		  	 


			IF DB_OTP IS NULL THEN

				SET OutputRoot.JSON.Data.StatusCode='404';
				SET OutputRoot.JSON.Data.Message='Unknown CustomerID';
			ELSE

				IF OTP_No <> Environment.ACCOUNT_TAB.OTP THEN

					SET OutputRoot.JSON.Data.StatusCode='404';
					SET OutputRoot.JSON.Data.Message='OTP is not valid';

				ELSE
					--compairing otp generated time and current time

					DECLARE otpgen_time,cur_time TIMESTAMP;
					SET otpgen_time=CAST(Environment.ACCOUNT_TAB.OTP_TIME AS TIMESTAMP);
					SET cur_time=CURRENT_TIMESTAMP;
					DECLARE process_date,process_time INTERVAL;
					SET process_date=(CAST(otpgen_time AS DATE) - CAST(cur_time AS DATE))DAY;
					SET process_time=(CAST(cur_time AS TIME)- CAST(otpgen_time AS TIME))SECOND;

					DECLARE P_TIME,P_DAY INTEGER;
					SET P_DAY=CAST(process_date AS INTEGER);
					SET P_TIME=CAST(process_time AS INTEGER);

					IF P_DAY <> 0 AND P_TIME >=300 THEN

						SET OutputRoot.JSON.Data.StatusCode='404';
						SET OutputRoot.JSON.Data.Message='OTP is expired';

					ELSEIF P_DAY <> 0 THEN

						SET OutputRoot.JSON.Data.StatusCode='404';
						SET OutputRoot.JSON.Data.Message='OTP is expired';
					ELSEIF P_TIME >=300 THEN

						SET OutputRoot.JSON.Data.StatusCode='404';
						SET OutputRoot.JSON.Data.Message='OTP is expired';

					ELSE

						SET OutputRoot.JSON.Data.StatusCode='200';
						SET OutputRoot.JSON.Data.Message='OTP Validation Successfull';
					END IF;                    
    	


				END IF;

			END IF;		  	 
		  	
		END IF;
	END;
END MODULE;