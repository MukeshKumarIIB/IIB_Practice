

CREATE COMPUTE MODULE Flow_of_Java_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		
		DECLARE a,b,add,sub,mul,div INTEGER;
		
		--SET a=InputRoot.JSON.Data.request.a;
		--SET b=InputRoot.JSON.Data.request.b;
		DECLARE operation REFERENCE TO InputRoot.JSON.Data.operation;
		
		
      CASE 
      	
      WHEN FIELDNAME(operation.addition)='addition' THEN
      	SET a=InputRoot.JSON.Data.operation.addition.a;
		SET b=InputRoot.JSON.Data.operation.addition.b;
      	CALL Add(a,b) INTO add;
      	SET OutputRoot.JSON.Data.Result.Addtion =add;
      WHEN FIELDNAME(operation.substraction)='substraction' THEN
      	SET a=InputRoot.JSON.Data.operation.substraction.a;
		SET b=InputRoot.JSON.Data.operation.substraction.b;
      	CALL Sub(a,b) INTO sub;
      	SET OutputRoot.JSON.Data.Result.Substraction =sub;
      	
      WHEN FIELDNAME(operation.multiplication)='multiplication' THEN
      	SET a=InputRoot.JSON.Data.operation.multiplication.a;
		SET b=InputRoot.JSON.Data.operation.multiplication.b;
      	CALL Mul(a,b) INTO mul;
      	SET OutputRoot.JSON.Data.Result.Multiplication =mul;
      	
      WHEN FIELDNAME(operation.division)='division' THEN
      	SET a=InputRoot.JSON.Data.operation.division.a;
		SET b=InputRoot.JSON.Data.operation.division.b;
      	  CALL Div(a,b) INTO div;
      	   SET OutputRoot.JSON.Data.Result.Division =div;   	
      ELSE 
      	
      	SET OutputRoot.JSON.Data.Result ='Unknown';
      	
      END CASE;
		
--		--calling java routines
--		CALL Add(a,b) INTO add;
--		CALL Sub(a,b) INTO sub;
--		CALL Mul(a,b) INTO mul;
--		CALL Div(a,b) INTO div;
--		
--		
--		SET OutputRoot.JSON.Data.Result.Addtion =add;
--		SET OutputRoot.JSON.Data.Result.Substraction =sub;
--		SET OutputRoot.JSON.Data.Result.Multiplication =mul;
--		SET OutputRoot.JSON.Data.Result.Division =div;
	END;
END MODULE;
--addition
CREATE PROCEDURE Add (IN a INTEGER,IN b INTEGER ) RETURNS INTEGER
LANGUAGE JAVA
EXTERNAL NAME "com.sample.Test.add";
--substraction
CREATE PROCEDURE Sub (IN a INTEGER,IN b INTEGER ) RETURNS INTEGER
LANGUAGE JAVA
EXTERNAL NAME "com.sample.Test.sub";

--multiplication
CREATE PROCEDURE Mul (IN a INTEGER,IN b INTEGER ) RETURNS INTEGER
LANGUAGE JAVA
EXTERNAL NAME "com.sample.Test.mul";

--division
CREATE PROCEDURE Div (IN a INTEGER,IN b INTEGER ) RETURNS INTEGER
LANGUAGE JAVA
EXTERNAL NAME "com.sample.Test.div";
